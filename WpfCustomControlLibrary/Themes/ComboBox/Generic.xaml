<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:controls="clr-namespace:WpfCustomControlLibrary.Controls">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/WpfCustomControlLibrary;component/Themes/Validation.xaml"/>
        <ResourceDictionary Source="/WpfCustomControlLibrary;component/Themes/Brushes.xaml"/>
        <ResourceDictionary Source="/WpfCustomControlLibrary;component/Themes/Icons.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type ComboBoxItem}">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Regular"/>
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="Padding" Value="14,8"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter><!--VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"-->
                            <ContentPresenter.Resources>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                                </Style>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#E9ECEF"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource HighlightBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource HighlightTextBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AsoComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="MaxDropDownHeight" Value="200"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>

        <Setter Property="Background" Value="#FFFFFF"/>
        <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1,1,1,1"/>

        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Regular"/>
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>

        <Setter Property="Padding" Value="8"/>

        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource EmptyValidationTemplate}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <ControlTemplate.Resources>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="CornerRadius" Value="5,5,5,5"/>
                        </Style>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Border Name="FocusRing" 
                                BorderThickness="3.8" 
                                BorderBrush="{StaticResource FocusRingBrush}" 
                                CornerRadius="5"
                                Margin="-2.8"
                                Visibility="Hidden"/>

                        <Border Name="Border" 
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="32"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Grid.Column="1"
                                           FontFamily="{StaticResource PrimeIcons}"
                                           Foreground="{StaticResource IconBrush}"
                                           Text="{Binding Source={x:Static controls:IconType.ChevronDown}, Converter={StaticResource IconConverter}}"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"/>

                                <ToggleButton Grid.Column="0" Grid.ColumnSpan="2" 
                                              Focusable="False"
                                              ClickMode="Press"
                                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                    <ToggleButton.Template>
                                        <ControlTemplate>
                                            <Border Cursor="Hand" Background="Transparent"/>
                                        </ControlTemplate>
                                    </ToggleButton.Template>
                                </ToggleButton>

                                <ContentPresenter Name="Content" Grid.Column="0" IsHitTestVisible="False"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  Margin="{TemplateBinding Padding}"
                                                  Content="{TemplateBinding SelectionBoxItem}"
                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}">
                                    <ContentPresenter.Resources>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                                        </Style>
                                    </ContentPresenter.Resources>
                                </ContentPresenter>

                                <TextBox x:Name="PART_EditableTextBox"
                                         Grid.Column="0"
                                         Visibility="Hidden"
                                         Background="Transparent"
                                         BorderBrush="Transparent"
                                         BorderThickness="0,0,0,0"
                                         FontSize="{TemplateBinding FontSize}"
                                         FontWeight="{TemplateBinding FontWeight}"
                                         Foreground="{TemplateBinding Foreground}"
                                         Padding="{TemplateBinding Padding}"
                                         VerticalAlignment="Center"
                                         Style="{x:Null}"/>

                                <Popup x:Name="PART_Popup"
                                       Placement="Bottom"
                                       VerticalOffset="1"
                                       IsOpen="{TemplateBinding IsDropDownOpen}"
                                       AllowsTransparency="True"
                                       Focusable="False" 
                                       PopupAnimation="Slide">
                                    <Grid Name="DropDown" Margin="12"
                                          Width="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}"
                                          MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                        <Border Background="#FFFFFF" CornerRadius="5">
                                            <Border.Effect>
                                                <DropShadowEffect Color="Black" ShadowDepth="2" Opacity="0.1" Direction="270" BlurRadius="12"/>
                                            </Border.Effect>
                                            <ScrollViewer>
                                                <Grid>
                                                    <ItemsPresenter Margin="0,8" ScrollViewer.CanContentScroll="True"/>
                                                    <TextBlock Name="tbNoResult" Text="Не найден" Margin="10 0 0 0" 
                                                               HorizontalAlignment="Left"
                                                               VerticalAlignment="Center" 
                                                               Visibility="Hidden"/>
                                                </Grid>
                                            </ScrollViewer>
                                        </Border>
                                    </Grid>
                                </Popup>
                            </Grid>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <!--При наведении мыши-->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}"/>
                        </Trigger>

                        <!--При ошибке-->
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ErrorBorderBrush}"/>
                        </Trigger>

                        <!--При фокусе-->
                        <Trigger SourceName="PART_EditableTextBox" Property="IsFocused" Value="True">
                            <Setter TargetName="FocusRing" Property="Visibility" Value="Visible"/>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="PART_EditableTextBox" Property="IsFocused" Value="True"/>
                                <Condition Property="Validation.HasError" Value="False"/>
                            </MultiTrigger.Conditions>

                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}"/>
                        </MultiTrigger>
                        
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.8"/>
                        </Trigger>

                        <Trigger Property="IsEditable" Value="True">
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="Content" Property="Visibility" Value="Hidden"/>
                        </Trigger>

                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="DropDown" Property="MinHeight" Value="34"/>
                            <Setter TargetName="tbNoResult" Property="Visibility" Value="Visible"/>
                        </Trigger>

                        <Trigger SourceName="PART_Popup" Property="Popup.IsOpen" Value="true">
                            <Setter TargetName="FocusRing" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource AsoComboBoxStyle}"/>
</ResourceDictionary>