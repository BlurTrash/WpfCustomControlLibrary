<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:WpfCustomControlLibrary.Controls"
                    xmlns:converters="clr-namespace:WpfCustomControlLibrary.Controls.Converters">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/WpfCustomControlLibrary;component/Themes/Brushes.xaml"/>
        <ResourceDictionary Source="/WpfCustomControlLibrary;component/Themes/Icons.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!--Цвета-->
    <!--Primary-->
    <Color x:Key="ButtonColor">#3B82F6</Color>
    <Color x:Key="ButtonHoverColor">#2563EB</Color>
    <Color x:Key="ButtonActiveColor">#1D4ED8</Color>

    <!--Secondary-->
    <Color x:Key="SecondaryButtonColor">#64748B</Color>
    <Color x:Key="SecondaryButtonHoverColor">#475569</Color>
    <Color x:Key="SecondaryButtonActiveColor">#334155</Color>

    <!--Кисти-->
    <!--Primary-->
    <SolidColorBrush x:Key="ButtonBrush" Color="#3B82F6"/>
    <SolidColorBrush x:Key="ButtonHoverBrush" Color="#2563EB"/>
    <SolidColorBrush x:Key="ButtonActiveBrush" Color="#1D4ED8"/>

    <!--Secondary-->
    <SolidColorBrush x:Key="SecondaryButtonBrush" Color="#64748B"/>
    <SolidColorBrush x:Key="SecondaryButtonHoverBrush" Color="#475569"/>
    <SolidColorBrush x:Key="SecondaryButtonActiveBrush" Color="#334155"/>

    <ControlTemplate x:Key="ButtonPrimeTemplate" TargetType="{x:Type controls:ButtonPrime}">
        <Grid>
            <Border Name="FocusRing" 
                    BorderThickness="2.8" 
                    BorderBrush="{StaticResource FocusRingBrush}" 
                    CornerRadius="5"
                    Margin="-3.8"
                    Visibility="Hidden"/>
            <Border Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{TemplateBinding CornerRadius}"
                    Cursor="Hand"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">

                <!--Второй Border для исправления визуального бага-->
                <Border Margin="-1" 
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}"
                        Padding="{TemplateBinding Padding}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Name="SpaceIconLeft" Width="Auto"/>
                            <ColumnDefinition Name="SpaceLeft" Width="0"/>
                            <ColumnDefinition Name="SpaceContent" Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Grid x:Name="IconLeft" Grid.Column="0" Width="16" Height="16" Margin="10 0">
                            <TextBlock Text="{TemplateBinding Icon, Converter={StaticResource IconConverter}}" 
                                       FontFamily="{StaticResource PrimeIcons}"
                                       FontWeight="Regular"
                                       Foreground="{TemplateBinding Foreground}"
                                       TextAlignment="Center"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"/>
                        </Grid>
                        <Grid Name="Content" Grid.Column="2" Margin="0 0 10 0">
                            <ContentPresenter Content="{TemplateBinding Content}" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </Grid>
                </Border>
            </Border>
        </Grid>

        <ControlTemplate.Triggers>
            <!--При фокусе-->
            <Trigger Property="IsFocused" Value="True">
                <Setter TargetName="FocusRing" Property="Visibility" Value="Visible"/>
            </Trigger>

            <Trigger Property="IsRounded" Value="True">
                <Setter TargetName="FocusRing" Property="CornerRadius" Value="1000"/>
            </Trigger>

            <Trigger Property="Icon" Value="None">
                <Setter TargetName="IconLeft" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="SpaceLeft" Property="Width" Value="10"/>
            </Trigger>

            <Trigger Property="Content" Value="{x:Null}">
                <Setter TargetName="SpaceIconLeft" Property="Width" Value="*"/>
                <Setter TargetName="SpaceContent" Property="Width" Value="0"/>
                <Setter TargetName="Content" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="SpaceLeft" Property="Width" Value="0"/>

                <Setter TargetName="IconLeft" Property="Margin" Value="0"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ButtonPrimeStyle" TargetType="{x:Type controls:ButtonPrime}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template" Value="{StaticResource ButtonPrimeTemplate}"/>

        <Setter Property="Background" Value="{StaticResource ButtonBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBrush}"/>
        <Setter Property="BorderThickness" Value="1,1,1,1"/>
        <Setter Property="CornerRadius" Value="5,5,5,5"/>

        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="#FFFFFF"/>

        <Setter Property="Height" Value="34"/>
        <!--<Setter Property="Padding" Value="14,8"/>-->

        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>

        <Style.Triggers>
            <Trigger Property="Severity" Value="Secondary">
                <Setter Property="Background" Value="{StaticResource SecondaryButtonBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource SecondaryButtonBrush}"/>
            </Trigger>

            <Trigger Property="IsText" Value="True">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0,0,0,0"/>
            </Trigger>

            <Trigger Property="IsOutlined" Value="True">
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Severity" Value="Primary"/>
                    <Condition Property="IsText" Value="True"/>
                </MultiTrigger.Conditions>

                <Setter Property="Foreground" Value="{StaticResource ButtonBrush}"/>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Severity" Value="Secondary"/>
                    <Condition Property="IsText" Value="True"/>
                </MultiTrigger.Conditions>

                <Setter Property="Foreground" Value="{StaticResource SecondaryButtonBrush}"/>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Severity" Value="Primary"/>
                    <Condition Property="IsOutlined" Value="True"/>
                </MultiTrigger.Conditions>

                <Setter Property="Foreground" Value="{StaticResource ButtonBrush}"/>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Severity" Value="Secondary"/>
                    <Condition Property="IsOutlined" Value="True"/>
                </MultiTrigger.Conditions>

                <Setter Property="Foreground" Value="{StaticResource SecondaryButtonBrush}"/>
            </MultiTrigger>

            <Trigger Property="IsRounded" Value="True">
                <Setter Property="CornerRadius" Value="1000"/>
            </Trigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.6"/>
            </Trigger>


            <!--#region IsMouseOver -->

            <!--Severity=Primary, IsText=False-->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Severity" Value="Primary"/>
                    <Condition Property="IsText" Value="False"/>
                    <Condition Property="IsOutlined" Value="False"/>

                    <Condition Property="IsMouseOver" Value="True"/>
                </MultiTrigger.Conditions>

                <Setter Property="Background" Value="{StaticResource ButtonHoverBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ButtonHoverBrush}"/>
            </MultiTrigger>

            <!--Severity=Secondary, IsText=False-->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Severity" Value="Secondary"/>
                    <Condition Property="IsText" Value="False"/>
                    <Condition Property="IsOutlined" Value="False"/>

                    <Condition Property="IsMouseOver" Value="True"/>
                </MultiTrigger.Conditions>

                <Setter Property="Background" Value="{StaticResource SecondaryButtonHoverBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource SecondaryButtonHoverBrush}"/>
            </MultiTrigger>

            <!--Severity=Primary, IsText=True-->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Severity" Value="Primary"/>
                    <Condition Property="IsText" Value="True"/>

                    <Condition Property="IsMouseOver" Value="True"/>
                </MultiTrigger.Conditions>

                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource ButtonColor}" Opacity="0.04"/>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>

            <!--Severity=Secondary, IsText=True-->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Severity" Value="Secondary"/>
                    <Condition Property="IsText" Value="True"/>

                    <Condition Property="IsMouseOver" Value="True"/>
                </MultiTrigger.Conditions>

                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource SecondaryButtonHoverColor}" Opacity="0.04"/>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>

            <!--Severity=Primary, IsOutlined=True-->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Severity" Value="Primary"/>
                    <Condition Property="IsOutlined" Value="True"/>

                    <Condition Property="IsMouseOver" Value="True"/>
                </MultiTrigger.Conditions>

                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource ButtonColor}" Opacity="0.04"/>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>

            <!--Severity=Secondary, IsOutlined=True-->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Severity" Value="Secondary"/>
                    <Condition Property="IsOutlined" Value="True"/>

                    <Condition Property="IsMouseOver" Value="True"/>
                </MultiTrigger.Conditions>

                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource SecondaryButtonHoverColor}" Opacity="0.04"/>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>

            <!--#endregion-->


            <!--#region IsPressed -->

            <!--Severity=Primary, IsText=False-->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Severity" Value="Primary"/>
                    <Condition Property="IsText" Value="False"/>
                    <Condition Property="IsOutlined" Value="False"/>

                    <Condition Property="IsPressed" Value="True"/>
                </MultiTrigger.Conditions>

                <Setter Property="Background" Value="{StaticResource ButtonActiveBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ButtonActiveBrush}"/>
            </MultiTrigger>

            <!--Severity=Secondary, IsText=False-->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Severity" Value="Secondary"/>
                    <Condition Property="IsText" Value="False"/>
                    <Condition Property="IsOutlined" Value="False"/>

                    <Condition Property="IsPressed" Value="True"/>
                </MultiTrigger.Conditions>

                <Setter Property="Background" Value="{StaticResource SecondaryButtonActiveBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource SecondaryButtonActiveBrush}"/>
            </MultiTrigger>

            <!--Severity=Primary, IsText=True-->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Severity" Value="Primary"/>
                    <Condition Property="IsText" Value="True"/>

                    <Condition Property="IsPressed" Value="True"/>
                </MultiTrigger.Conditions>

                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource ButtonColor}" Opacity="0.16"/>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>

            <!--Severity=Secondary, IsText=True-->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Severity" Value="Secondary"/>
                    <Condition Property="IsText" Value="True"/>

                    <Condition Property="IsPressed" Value="True"/>
                </MultiTrigger.Conditions>

                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource SecondaryButtonActiveColor}" Opacity="0.16"/>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>

            <!--Severity=Primary, IsOutlined=True-->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Severity" Value="Primary"/>
                    <Condition Property="IsOutlined" Value="True"/>

                    <Condition Property="IsPressed" Value="True"/>
                </MultiTrigger.Conditions>

                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource ButtonColor}" Opacity="0.16"/>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>

            <!--Severity=Secondary, IsOutlined=True-->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Severity" Value="Secondary"/>
                    <Condition Property="IsOutlined" Value="True"/>

                    <Condition Property="IsPressed" Value="True"/>
                </MultiTrigger.Conditions>

                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource SecondaryButtonActiveColor}" Opacity="0.16"/>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
            <!--#endregion-->

        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type controls:ButtonPrime}"
         BasedOn="{StaticResource ButtonPrimeStyle}"/>
</ResourceDictionary>