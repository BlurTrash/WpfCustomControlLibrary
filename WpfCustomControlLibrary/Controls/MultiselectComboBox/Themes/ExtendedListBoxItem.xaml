<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:WpfCustomControlLibrary.Controls"
                    xmlns:converters="clr-namespace:WpfCustomControlLibrary.Controls.Converters"
                    xmlns:wpfcontrols="clr-namespace:System.Windows.Controls.Ribbon.Primitives;assembly=System.Windows.Controls.Ribbon">

    <SolidColorBrush x:Key="TextBrush" Color="#495057"/>
    <SolidColorBrush x:Key="HighlightBrush" Color="#EFF6FF"/>
    <SolidColorBrush x:Key="HighlightTextBrush" Color="#1D4ED8"/>
    <SolidColorBrush x:Key="ControlBorderBrush" Color="#CED4DA"/>
    <SolidColorBrush x:Key="HoverBorderBrush" Color="#3B82F6"/>
    <SolidColorBrush x:Key="HeaderBrush" Color="#F8F9FA"/>

    <converters:IconConverter x:Key="IconConverter"/>

    <FontFamily x:Key="PrimeIcons">/WpfCustomControlLibrary;component/Themes/Fonts/#primeicons</FontFamily>

    <!--<Style x:Key="ListBoxCheckBox" TargetType="CheckBox">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderThickness" Value="1.5"/>
        <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Column="0">
                            <Border x:Name="CheckBoxBorder" Width="20" Height="20" CornerRadius="5" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                <Path x:Name="CheckMark"
                                      Visibility="Hidden" 
                                      Data="M0,3 L3,7 L11,0" 
                                      VerticalAlignment="Center"
                                      HorizontalAlignment="Center" 
                                      Stroke="White" StrokeThickness="2" 
                                      StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>
                            </Border>
                            <Border Name="borderOwner"  Width="23" Height="23" BorderThickness="3" Opacity="0.4" Visibility="Hidden" BorderBrush="{StaticResource HoverBorderBrush}" CornerRadius="5" ></Border>
                        </Grid>
                        <ContentPresenter x:Name="contentPresenter"
                                          Grid.Column="1" Focusable="False" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}" 
                                          RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="Background" Value="{StaticResource HoverBorderBrush}"/>
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="borderOwner" Property="Visibility" Value="Visible"/>
                            <Setter Property="BorderBrush" Value="{StaticResource HoverBorderBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Background" Value="{StaticResource HighlightTextBrush}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="BorderBrush" Value="{StaticResource HoverBorderBrush}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <Style x:Key="ListBoxCheckBox" TargetType="{x:Type CheckBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="#FFFFFF"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Setter Property="Padding" Value="7,0,0,0"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="templateRoot">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Border x:Name="checkBoxBorder"  Width="20" Height="20"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="5"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid>
                                <TextBlock x:Name="optionMark"
                                           FontSize="14"
                                           Foreground="#FFFFFF"
                                           Visibility="Hidden"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                           FontFamily="{StaticResource PrimeIcons}" 
                                           Text="{Binding Source={x:Static local:IconType.Check}, Converter={StaticResource IconConverter}}"/>

                                <Border x:Name="nullableMark"
                                        HorizontalAlignment="Center" VerticalAlignment="Center"
                                        Visibility="Collapsed" 
                                        BorderThickness="0" Margin="0.5 0 0 0"
                                        Background="#FFFFFF" 
                                        CornerRadius="2"
                                        Width="7.5" Height="7.5"/>
                            </Grid>
                        </Border>



                        <ContentPresenter Grid.Column="1" 
                                          Focusable="False" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="{TemplateBinding Padding}" 
                                          RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{DynamicResource HoverBorderBrush}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource HoverBorderBrush}"/>
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter TargetName="optionMark" Property="Visibility" Value="Visible"/>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Background" Value="{DynamicResource HoverBorderBrush}"/>
                            <Setter TargetName="optionMark" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="nullableMark" Property="Visibility" Value="Visible"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource HoverBorderBrush}"/>
                            <Setter Property="BorderThickness" Value="0"/>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Background" Value="{DynamicResource ControlBorderBrush}"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}"/>
                                <Setter TargetName="optionMark" Property="Foreground" Value="{StaticResource TextBrush}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False"/>
                                <Condition Property="IsChecked" Value="{x:Null}"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Background" Value="{DynamicResource ControlBorderBrush}"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}"/>
                                <Setter TargetName="nullableMark" Property="Background" Value="{StaticResource IconBrush}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False"/>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Background" Value="{DynamicResource HeaderBrush}"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}"/>
                                <Setter TargetName="optionMark" Property="Foreground" Value="{StaticResource TextBrush}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:ExtendedListBoxItem}">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Regular"/>
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="15,8"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ExtendedListBoxItem}">
                    <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <CheckBox Grid.Column="0" x:Name="PART_CheckBox" Visibility="Visible"
                                      Margin="0 0 10 0" Style="{StaticResource ListBoxCheckBox}"
                                      IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <ContentPresenter Grid.Column="1">
                                <ContentPresenter.Resources>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                                    </Style>
                                </ContentPresenter.Resources>
                            </ContentPresenter>
                        </Grid>
                    </Border>

                    <!--<ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=local:ExtendedListBox}, Path=SelectionMode}">
                            <DataTrigger.Value>
                                <SelectionMode>Multiple</SelectionMode>
                            </DataTrigger.Value>
                            <Setter TargetName="PART_CheckBox" Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#E9ECEF"/>
                <Setter Property="BorderBrush" Value="#E9ECEF"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource HighlightBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource HighlightTextBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource HighlightBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>