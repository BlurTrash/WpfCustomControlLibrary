<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:WpfCustomControlLibrary.Controls"
                    xmlns:converters="clr-namespace:WpfCustomControlLibrary.Controls.Converters">

    <SolidColorBrush x:Key="MultiSelectComboBox.DropDown.BackgroundBrush" Color="White"/>
    <SolidColorBrush x:Key="MultiSelectComboBox.DropDown.HeaderBrush" Color="#F8F9FA"/>
    <SolidColorBrush x:Key="MultiSelectComboBox.DropDown.BorderBrush" Color="#DEE2E6"/>
    <SolidColorBrush x:Key="TextBrush" Color="#495057"/>
    <SolidColorBrush x:Key="ControlBorderBrush" Color="#CED4DA"/>
    <SolidColorBrush x:Key="FocusRingBrush" Color="#BFDBFE"/>
    <SolidColorBrush x:Key="HoverBorderBrush" Color="#3B82F6"/>
    <SolidColorBrush x:Key="IconBrush" Color="#6C757D"/>
    <SolidColorBrush x:Key="HoverBrush" Color="#e9ecef"/>
    <SolidColorBrush x:Key="ErrorBorderBrush" Color="#E24C4C"/>

    <converters:IconConverter x:Key="IconConverter"/>

    <FontFamily x:Key="PrimeIcons">/WpfCustomControlLibrary;component/Themes/Fonts/#primeicons</FontFamily>

    <DataTemplate x:Key="DefaultWatermarkTemplate">
        <ContentControl Content="{Binding}"
                    Foreground="{StaticResource TextBrush}"
                    Focusable="False" />
    </DataTemplate>

    <Style x:Key="MultiSelectComboBoxCheckBox" TargetType="{x:Type CheckBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="#FFFFFF"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Setter Property="Padding" Value="7,0,0,0"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="templateRoot">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Border x:Name="checkBoxBorder"  Width="20" Height="20"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="5"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid>
                                <TextBlock x:Name="optionMark"
                                           FontSize="14"
                                           Foreground="#FFFFFF"
                                           Visibility="Hidden"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                           FontFamily="{StaticResource PrimeIcons}" 
                                           Text="{Binding Source={x:Static local:IconType.Check}, Converter={StaticResource IconConverter}}"/>

                                <Border x:Name="nullableMark"
                                        HorizontalAlignment="Center" VerticalAlignment="Center"
                                        Visibility="Collapsed" 
                                        BorderThickness="0" Margin="0.5 0 0 0"
                                        Background="#FFFFFF" 
                                        CornerRadius="2"
                                        Width="7.5" Height="7.5"/>
                            </Grid>
                        </Border>



                        <ContentPresenter Grid.Column="1" 
                                          Focusable="False" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="{TemplateBinding Padding}" 
                                          RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{DynamicResource HoverBorderBrush}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource HoverBorderBrush}"/>
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter TargetName="optionMark" Property="Visibility" Value="Visible"/>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Background" Value="{DynamicResource HoverBorderBrush}"/>
                            <Setter TargetName="optionMark" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="nullableMark" Property="Visibility" Value="Visible"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource HoverBorderBrush}"/>
                            <Setter Property="BorderThickness" Value="0"/>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Background" Value="{DynamicResource ControlBorderBrush}"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}"/>
                                <Setter TargetName="optionMark" Property="Foreground" Value="{StaticResource TextBrush}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False"/>
                                <Condition Property="IsChecked" Value="{x:Null}"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Background" Value="{DynamicResource ControlBorderBrush}"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}"/>
                                <Setter TargetName="nullableMark" Property="Background" Value="{StaticResource IconBrush}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False"/>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Background" Value="{DynamicResource MultiSelectComboBox.DropDown.HeaderBrush}"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}"/>
                                <Setter TargetName="optionMark" Property="Foreground" Value="{StaticResource TextBrush}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CloseButton" TargetType="{x:Type Button}">
        <Setter Property="BorderBrush" Value="{StaticResource MultiSelectComboBox.DropDown.BorderBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="MinWidth" Value="25"/>
        <Setter Property="MinHeight" Value="25"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Ellipse Name="ellipseOwner" Margin="-2" Stroke="{StaticResource FocusRingBrush}" StrokeThickness="0" Fill="Transparent"/>
                        <Grid>
                            <Ellipse Name="ellipseBorder" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Fill="{TemplateBinding Background}" StrokeThickness="0" Stroke="{TemplateBinding BorderBrush}"/>
                            <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource HoverBrush}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="ellipseBorder" Property="StrokeThickness" Value="1"/>
                            <Setter Property="BorderBrush" Value="{StaticResource HoverBrush}"/>
                            <Setter TargetName="ellipseOwner" Property="StrokeThickness" Value="2"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource MultiSelectComboBox.DropDown.BorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SearchTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="#FFFFFF"/>
        <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1,1,1,1"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Regular"/>
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="Padding" Value="5 5 10 5"/>
       
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ControlTemplate.Resources>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="CornerRadius" Value="5,5,5,5"/>
                        </Style>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Border Name="FocusRing" 
                                BorderThickness="3.8" 
                                BorderBrush="{StaticResource FocusRingBrush}" 
                                CornerRadius="5"
                                Margin="-2.8"
                                Visibility="Hidden"/>

                        <Border x:Name="Border" 
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True" Padding="{TemplateBinding Padding}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>

                                <ScrollViewer x:Name="PART_ContentHost"/>

                                <TextBlock Grid.Column="1"
                                           Text="{Binding Source={x:Static local:IconType.Search}, Converter={StaticResource IconConverter}}"
                                           FontFamily="{StaticResource PrimeIcons}"
                                           Foreground="{StaticResource IconBrush}"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <!--При наведении мыши-->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}"/>
                        </Trigger>

                        <!--При фокусе-->
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="FocusRing" Property="Visibility" Value="Visible"/>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="True"/>
                                <Condition Property="Validation.HasError" Value="False"/>
                            </MultiTrigger.Conditions>

                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}"/>
                        </MultiTrigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type local:MultiselectComboBox}">
        <Setter Property="Height" Value="36.6"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="10 0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:MultiselectComboBox}">
                    <Grid x:Name="PART_MultiSelectComboBox">
                        <Border Name="borderOwner" BorderThickness="4" Opacity="0.4" Visibility="Hidden" BorderBrush="{StaticResource HoverBorderBrush}" CornerRadius="5" Margin="-3"/>

                        <Border Name="Border" 
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True"
                                CornerRadius="5">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Grid.Column="1" Margin="0 0 10 0"
                                                           Text="{Binding Source={x:Static local:IconType.ChevronDown}, Converter={StaticResource IconConverter}}"
                                                           FontFamily="{StaticResource PrimeIcons}"
                                                           Foreground="{StaticResource IconBrush}"
                                                           HorizontalAlignment="Center"
                                                           VerticalAlignment="Center"/>

                                <local:ExtendedItemsControl Grid.Column="0" Width="auto" HorizontalAlignment="Left"
                                                            x:Name="PART_MultiSelectComboBox_ItemsControl"
                                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                            ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=local:MultiselectComboBox}, Path=SelectedItems}"
                                                            DisplayMemberPath="{Binding RelativeSource={RelativeSource AncestorType=local:MultiselectComboBox}, Path=DisplayMemberPath}"
                                                            ItemTemplate="{Binding RelativeSource={RelativeSource AncestorType=local:MultiselectComboBox}, Path=ItemTemplate}"
                                                            DisplayMode="{Binding RelativeSource={RelativeSource AncestorType=local:MultiselectComboBox}, Path=DisplayMode}"
                                                            Background="Transparent"
                                                            BorderBrush="Transparent"
                                                            BorderThickness="0" Focusable="False">
                                </local:ExtendedItemsControl>

                                <ContentPresenter x:Name="PART_WatermarkHost" Grid.Column="0"
                                                  Content="{TemplateBinding Watermark}"
                                                  ContentTemplate="{Binding WatermarkTemplate, RelativeSource={RelativeSource TemplatedParent}, TargetNullValue={StaticResource DefaultWatermarkTemplate}}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  HorizontalAlignment="Left"
                                                  IsHitTestVisible="False"
                                                  Margin="{TemplateBinding Padding}"
                                                  Visibility="Collapsed">
                                    <ContentPresenter.Resources>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType=local:MultiselectComboBox}, Path=Foreground, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                            <Setter Property="FontSize" Value="{Binding RelativeSource={RelativeSource AncestorType=local:MultiselectComboBox}, Path=FontSize, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                            <Setter Property="FontFamily" Value="{Binding RelativeSource={RelativeSource AncestorType=local:MultiselectComboBox}, Path=FontFamily, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                            <Setter Property="FontWeight" Value="{Binding RelativeSource={RelativeSource AncestorType=local:MultiselectComboBox}, Path=FontWeight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                            <Setter Property="Opacity" Value="0.8"/>
                                        </Style>
                                    </ContentPresenter.Resources>
                                </ContentPresenter>

                                <Button Grid.Column="0" Grid.ColumnSpan="2" x:Name="PART_MultiSelectComboBox_Button"
                                        FocusVisualStyle="{x:Null}">
                                    <Button.Template>
                                        <ControlTemplate>
                                            <Border Cursor="Hand" Background="Transparent"/>
                                        </ControlTemplate>
                                    </Button.Template>
                                </Button>

                                <Popup x:Name="PART_Dropdown_Popup" VerticalOffset="1"
                                       IsOpen="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                       Placement="Bottom" AllowsTransparency="True" PopupAnimation="Slide" StaysOpen="{TemplateBinding StaysOpen}">
                                    <Grid>
                                        <Border x:Name="dropDownBorder"
                                                MaxHeight="{Binding Path=MaxDropDownHeight, RelativeSource={RelativeSource TemplatedParent}}"
                                                Width="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}"
                                                Background="{StaticResource MultiSelectComboBox.DropDown.BackgroundBrush}" Margin="2">
                                            <Border.Effect>
                                                <DropShadowEffect Color="Black" ShadowDepth="2" Opacity="0.1" Direction="270" BlurRadius="12"/>
                                            </Border.Effect>
                                            <Grid x:Name="grid">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="auto"/>
                                                    <RowDefinition/>
                                                </Grid.RowDefinitions>

                                                <Border Grid.Row="0"
                                            Background="{StaticResource MultiSelectComboBox.DropDown.HeaderBrush}" 
                                            BorderBrush="{StaticResource MultiSelectComboBox.DropDown.BorderBrush}" 
                                            BorderThickness="0 0 0 1" Padding="15 10">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="auto"/>
                                                            <ColumnDefinition/>
                                                            <ColumnDefinition Width="auto"/>
                                                        </Grid.ColumnDefinitions>
                                                        <CheckBox Grid.Column="0" Visibility="Collapsed" x:Name="PART_Dropdown_CheckBox" Margin="0 0 10 0" Style="{StaticResource MultiSelectComboBoxCheckBox}"></CheckBox>
                                                        <TextBox Grid.Column="1" x:Name="PART_Dropdown_SearchTextBox" Style="{StaticResource SearchTextBox}"></TextBox>
                                                        <Button Grid.Column="2" x:Name="PART_Dropdown_CloseButton" Width="25" Height="25" Margin="15 0 0 0" Style="{StaticResource CloseButton}">
                                                            <TextBlock Grid.Column="1"
                                                        Text="{Binding Source={x:Static local:IconType.Times}, Converter={StaticResource IconConverter}}"
                                                        FontFamily="{StaticResource PrimeIcons}"
                                                        Foreground="{StaticResource IconBrush}"
                                                        HorizontalAlignment="Center"
                                                        VerticalAlignment="Center"/>
                                                        </Button>
                                                    </Grid>
                                                </Border>

                                                <local:ExtendedListBox Grid.Row="1" x:Name="PART_Dropdown_ListBox"
                                                           DisplayMemberPath="{TemplateBinding DisplayMemberPath}"
                                                           
                                                           SelectedItem="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedItem}"
                                                           SelectedValue="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedValue}" 
                                                           SelectedIndex="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedIndex}"
                                                           SelectedValuePath="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedValuePath}"
                                                           SelectionMode="{TemplateBinding SelectionMode}"                                             
                                                           ItemTemplate="{TemplateBinding ItemTemplate}"/>
                                                <!--ItemsSource="{TemplateBinding ItemsSource}"-->
                                                <TextBlock Name="TB_NoResult" Grid.Row="1" Text="Не найден" Margin="10 0 0 0"
                                                           VerticalAlignment="Center" HorizontalAlignment="Left"
                                                           Visibility="Hidden"/>
                                            </Grid>
                                        </Border>
                                    </Grid>
                                </Popup>
                            </Grid>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="SelectionMode" Value="Multiple">
                            <Setter TargetName="PART_Dropdown_CheckBox" Property="Visibility" Value="Visible"/>
                        </Trigger>

                        <Trigger SourceName="PART_Dropdown_ListBox" Property="HasItems" Value="false">
                            <Setter TargetName="PART_Dropdown_CheckBox" Property="IsEnabled" Value="False"/>
                            <Setter TargetName="TB_NoResult" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="PART_Dropdown_ListBox" Property="Visibility" Value="Hidden"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource HoverBorderBrush}"/>
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource HoverBorderBrush}"/>
                            <Setter TargetName="borderOwner" Property="Visibility" Value="Visible"/>
                        </Trigger>

                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource HoverBorderBrush}"/>
                            <Setter TargetName="borderOwner" Property="Visibility" Value="Visible"/>
                        </Trigger>

                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource HoverBorderBrush}"/>
                            <Setter TargetName="borderOwner" Property="Visibility" Value="Visible"/>
                        </Trigger>

                        <Trigger Property="DisplayMode" Value="ChipWithBtnDelete">
                            <Setter TargetName="PART_MultiSelectComboBox_Button" Property="Grid.Column" Value="1"/>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="DisplayMode" Value="ChipWithBtnDelete"/>
                                <Condition Property="SelectedItem" Value="{x:Null}"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="PART_MultiSelectComboBox_Button" Property="Grid.Column" Value="0"/>
                                <Setter TargetName="PART_MultiSelectComboBox_Button" Property="Grid.ColumnSpan" Value="2"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <Trigger Property="SelectedItem" Value="{x:Null}">
                            <Setter TargetName="PART_WatermarkHost" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="PART_MultiSelectComboBox_ItemsControl" Property="Visibility" Value="Hidden"/>
                        </Trigger>

                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource ErrorBorderBrush}"/>
                            <Setter Property="BorderThickness" Value="1"/>

                            <Setter TargetName="borderOwner" Property="BorderBrush" Value="{StaticResource ErrorBorderBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource ErrorBorderBrush}"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>